#pragma once

namespace ZH
{


//primitive的类型 
enum  PRIMITIVE_TYPE
{
	ZH_PT_POINTLIST = 1,
	ZH_PT_LINELIST = 2,
	ZH_PT_LINESTRIP = 3,
	ZH_PT_TRIANGLELIST = 4,
	ZH_PT_TRIANGLESTRIP = 5,
	ZH_PT_TRIANGLEFAN = 6,
	ZH_PT_FORCE_DWORD = 0x7fffffff,
};

enum ZH_USAGE
{
	ZH_USAGE_AUTOGENMIPMAP=0,
	ZH_USAGE_DEPTHSTENCIL	=	1,
	ZH_USAGE_DMAP	=	2,
	ZH_USAGE_DONOTCLIP=3,
	ZH_USAGE_DYNAMIC	=	4,
	ZH_USAGE_NPATCHES=5,
	ZH_USAGE_POINTS	=	6,
	ZH_USAGE_RENDERTAEGET=7,
	ZH_USAGE_RTPATHES=8,
	ZH_USAGE_SOFTWAREPROCESSING=9,
	ZH_USAGE_WRITEONLY
};



enum ZH_POOL
{
	ZH_POOL_DEFAULT=0,
	ZH_POOL_MANAGED=1,
	ZH_POOL_SYSTEMMEM=2,
	ZH_POOL_SCRATCH=3,
	ZH_POOL_FORCE_DWORD=4,
};

enum ZH_BLEND_FACTOR
{
    ZH_BLEND_ZERO = 1,
    ZH_BLEND_ONE = 2,
    ZH_BLEND_SRCCOLOR = 3,
    ZH_BLEND_INVSRCCOLOR = 4,
    ZH_BLEND_SRCALPHA = 5,
    ZH_BLEND_INVSRCALPHA = 6,
    ZH_BLEND_DESTALPHA = 7,
    ZH_BLEND_INVDESTALPHA = 8,
    ZH_BLEND_DESTCOLOR = 9,
    ZH_BLEND_INVDESTCOLOR = 10,
    ZH_BLEND_SRCALPHASAT = 11,
    ZH_BLEND_BOTHSRCALPHA = 12,
    ZH_BLEND_BOTHINVSRCALPHA = 13,
    ZH_BLEND_BLENDFACTOR = 14,
    ZH_BLEND_INVBLENDFACTOR = 15,
    ZH_BLEND_FORCE_DWORD = 0x7fffffff,

};

enum ZH_DEPTH_FUNC
{
    ZH_CMP_NEVER = 1,
    ZH_CMP_LESS = 2,
    ZH_CMP_EQUAL = 3,
    ZH_CMP_LESSEQUAL = 4,
    ZH_CMP_GREATER = 5,
    ZH_CMP_NOTEQUAL = 6,
    ZH_CMP_GREATEREQUAL = 7,
    ZH_CMP_ALWAYS = 8,
    ZH_CMP_FORCE_DWORD = 0x7fffffff,

};

enum ZH_CULLMODE
{
    ZH_CULL_NONE = 1,
    ZH_CULL_CW = 2,
    ZH_CULL_CCW = 3,
    ZH_CULL_FORCE_DWORD = 0x7fffffff,

};


enum ZH_SHADE_OPTION
{
    ZH_SHADE_FLAT = 1,
    ZH_SHADE_GOURAUD = 2,
    ZH_SHADE_PHONG = 3,
    ZH_SHADE_FORCE_DWORD = 0x7fffffff,

};

enum ZH_FOG_MODE
{
    ZH_FOG_NONE = 0,
    ZH_FOG_EXP = 1,
    ZH_FOG_EXP2 = 2,
    ZH_FOG_LINEAR = 3,
    ZH_FOG_FORCE_DWORD = 0x7fffffff,



};

typedef D3DCOLOR ZHCOLOR;

//纹理
enum ZH_TEXTURE_STAGETYPE
{
    ZH_TSS_COLOROP = 1,
    ZH_TSS_COLORARG1 = 2,
    ZH_TSS_COLORARG2 = 3,
    ZH_TSS_ALPHAOP = 4,
    ZH_TSS_ALPHAARG1 = 5,
    ZH_TSS_ALPHAARG2 = 6,
    ZH_TSS_BUMPENVMAT00 = 7,
    ZH_TSS_BUMPENVMAT01 = 8,
    ZH_TSS_BUMPENVMAT10 = 9,
    ZH_TSS_BUMPENVMAT11 = 10,
    ZH_TSS_TEXCOORDINDEX = 11,
    ZH_TSS_BUMPENVLSCALE = 22,
    ZH_TSS_BUMPENVLOFFSET = 23,
    ZH_TSS_TEXTURETRANSFORMFLAGS = 24,
    ZH_TSS_COLORARG0 = 26,
    ZH_TSS_ALPHAARG0 = 27,
    ZH_TSS_RESULTARG = 28,
    ZH_TSS_CONSTANT = 32,
    ZH_TSS_FORCE_DWORD = 0x7fffffff,

};

enum ZH_TEXTURE_ADDRESSMODE
{
    ZH_TADDRESS_WRAP = 1,
    ZH_TADDRESS_MIRROR = 2,
    ZH_TADDRESS_CLAMP = 3,
    ZH_TADDRESS_BORDER = 4,
    ZH_TADDRESS_MIRRORONCE = 5,
    ZH_TADDRESS_FORCE_DWORD = 0x7fffffff,
};

enum ZH_TEXTURE_FILTERTYPE
{
    ZH_TEXF_NONE = 0,
    ZH_TEXF_POINT = 1,
    ZH_TEXF_LINEAR = 2,
    ZH_TEXF_ANISOTROPIC = 3,
    ZH_TEXF_PYRAMIDALQUAD = 6,
    ZH_TEXF_GAUSSIANQUAD = 7,
    ZH_TEXF_FORCE_DWORD = 0x7fffffff,

};

enum ZH_TEXTURE_COLOROP
{
    ZH_TOP_DISABLE = 1,
    ZH_TOP_SELECTARG1 = 2,
    ZH_TOP_SELECTARG2 = 3,
    ZH_TOP_MODULATE = 4,
    ZH_TOP_MODULATE2X = 5,
    ZH_TOP_MODULATE4X = 6,
    ZH_TOP_ADD = 7,
    ZH_TOP_ADDSIGNED = 8,
    ZH_TOP_ADDSIGNED2X = 9,
    ZH_TOP_SUBTRACT = 10,
    ZH_TOP_ADDSMOOTH = 11,
    ZH_TOP_BLENDDIFFUSEALPHA = 12,
    ZH_TOP_BLENDTEXTUREALPHA = 13,
    ZH_TOP_BLENDFACTORALPHA = 14,
    ZH_TOP_BLENDTEXTUREALPHAPM = 15,
    ZH_TOP_BLENDCURRENTALPHA = 16,
    ZH_TOP_PREMODULATE = 17,
    ZH_TOP_MODULATEALPHA_ADDCOLOR = 18,
    ZH_TOP_MODULATECOLOR_ADDALPHA = 19,
    ZH_TOP_MODULATEINVALPHA_ADDCOLOR = 20,
    ZH_TOP_MODULATEINVCOLOR_ADDALPHA = 21,
    ZH_TOP_BUMPENVMAP = 22,
    ZH_TOP_BUMPENVMAPLUMINANCE = 23,
    ZH_TOP_DOTPRODUCT3 = 24,
    ZH_TOP_MULTIPLYADD = 25,
    ZH_TOP_LERP = 26,
    ZH_TOP_FORCE_DWORD = 0x7fffffff,


};


}